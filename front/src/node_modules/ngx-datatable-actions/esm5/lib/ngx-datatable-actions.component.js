/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { Router } from '@angular/router';
var NgxDatatableActionsComponent = /** @class */ (function () {
    function NgxDatatableActionsComponent(router) {
        this.router = router;
        this.visibleColumns = [];
        this.cacheData = false;
        this.allColumns = [];
    }
    /**
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        if (this.datatable && this.datatable['ngx-datatable-actions']) {
            this.allColumns = this.datatable['ngx-datatable-actions'];
        }
        else {
            var _loop_1 = function (col) {
                col['visible'] = true;
                col['fixed'] = false;
                this_1.visibleColumns.forEach(function (item) {
                    if (col.prop === item) {
                        col['visible'] = false;
                    }
                });
                this_1.allColumns.push(col);
            };
            var this_1 = this;
            try {
                for (var _b = tslib_1.__values(this.datatable.bodyComponent.columns), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var col = _c.value;
                    _loop_1(col);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.setTableColumn();
            if (this.cacheData === true) {
                this.loadCacheData();
            }
        }
    };
    /**
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        if (this.datatable && this.datatable['ngx-datatable-actions']) {
            this.allColumns = this.datatable['ngx-datatable-actions'];
        }
    };
    /**
     * @param {?} column
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.toggleVisible = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        column['visible'] = !column['visible'];
        this.setTableColumn();
    };
    /**
     * @param {?} column
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.pinningVisible = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        column['fixed'] = !column['fixed'];
        this.allColumns[this.allColumns.indexOf(column)].frozenLeft = column['fixed'];
        this.setTableColumn();
    };
    /**
     * @private
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.setTableColumn = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var columns = this.allColumns.filter(function (c) {
            return c['visible'];
        });
        this.datatable.columns = columns;
        this.datatable['ngx-datatable-actions'] = this.allColumns;
        if (this.cacheData === true) {
            this.cacheColumn();
        }
    };
    /**
     * @private
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.loadCacheData = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var vcns = [];
        /** @type {?} */
        var fcns = [];
        /** @type {?} */
        var cache = sessionStorage.getItem(this.router.url + '|dt');
        if (cache != null) {
            /** @type {?} */
            var colns = JSON.parse(cache);
            vcns = colns[0].split(',');
            fcns = colns[1].split(',');
            this.allColumns.forEach(function (c) {
                if (vcns.length > 0 && c.name && vcns.indexOf(c.name) === -1) {
                    c['visible'] = false;
                }
                if (fcns.length > 0 && fcns.indexOf(c.name) > -1) {
                    c['fixed'] = true;
                    c.frozenLeft = true;
                }
            });
        }
        this.setTableColumn();
    };
    /**
     * @private
     * @return {?}
     */
    NgxDatatableActionsComponent.prototype.cacheColumn = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var vcol = [];
        /** @type {?} */
        var fcol = [];
        /** @type {?} */
        var columns = this.allColumns.filter(function (c) {
            return (c['visible'] || c['fixed']) && c.name;
        });
        columns.forEach(function (c) {
            if (c['visible']) {
                vcol.push(c.name);
            }
            if (c['fixed']) {
                fcol.push(c.name);
            }
        });
        if (vcol || fcol) {
            /** @type {?} */
            var value = JSON.stringify([vcol.join(','), fcol.join(',')]);
            sessionStorage.setItem(this.router.url + '|dt', value);
        }
        else {
            sessionStorage.removeItem(this.router.url + '|dt');
        }
    };
    NgxDatatableActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-datatable-actions',
                    template: "\n  <div class=\"dropdown d-inline\">\n    <a href=\"#\" class=\"btn m-btn m-btn--hover-brand m-btn--icon m-btn--icon-only m-btn--pill\"\n      data-toggle=\"dropdown\" aria-expanded=\"false\">\n      <i class=\"la la-ellipsis-h\"></i>\n    </a>\n    <div class=\"dropdown-menu dropdown-menu-right\" x-placement=\"bottom-end\">\n      <ng-container *ngFor=\"let col of allColumns\">\n        <div *ngIf=\"col.name && col.name!=null && col.name!=''\" class=\"dropdown-item\">\n          <a class=\"m-link\" title=\"\u53EF\u89C1\" (click)=\"toggleVisible(col)\">\n            <i class=\"la la-check\" [ngClass]=\"{'m--font-focus': col['visible'], 'm--font-metal': !col['visible']}\"></i>\n          </a>\n          <a class=\"m-link\" title=\"\u56FA\u5B9A\" (click)=\"pinningVisible(col)\">\n            <i class=\"la la-thumb-tack\" [ngClass]=\"{'m--font-focus': col['fixed'], 'm--font-metal': !col['fixed']}\"></i>\n          </a>\n          <span class=\"inline\">{{col.name}}</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>"
                }] }
    ];
    /** @nocollapse */
    NgxDatatableActionsComponent.ctorParameters = function () { return [
        { type: Router }
    ]; };
    NgxDatatableActionsComponent.propDecorators = {
        datatable: [{ type: Input }],
        visibleColumns: [{ type: Input }],
        cacheData: [{ type: Input }]
    };
    return NgxDatatableActionsComponent;
}());
export { NgxDatatableActionsComponent };
if (false) {
    /** @type {?} */
    NgxDatatableActionsComponent.prototype.datatable;
    /** @type {?} */
    NgxDatatableActionsComponent.prototype.visibleColumns;
    /** @type {?} */
    NgxDatatableActionsComponent.prototype.cacheData;
    /** @type {?} */
    NgxDatatableActionsComponent.prototype.allColumns;
    /**
     * @type {?}
     * @private
     */
    NgxDatatableActionsComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,