(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/router'), require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-datatable-actions', ['exports', '@angular/router', '@angular/core', '@angular/common'], factory) :
    (factory((global['ngx-datatable-actions'] = {}),global.ng.router,global.ng.core,global.ng.common));
}(this, (function (exports,router,core,common) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m)
            return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length)
                    o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxDatatableActionsComponent = /** @class */ (function () {
        function NgxDatatableActionsComponent(router$$1) {
            this.router = router$$1;
            this.visibleColumns = [];
            this.cacheData = false;
            this.allColumns = [];
        }
        /**
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var e_1, _a;
                if (this.datatable && this.datatable['ngx-datatable-actions']) {
                    this.allColumns = this.datatable['ngx-datatable-actions'];
                }
                else {
                    var _loop_1 = function (col) {
                        col['visible'] = true;
                        col['fixed'] = false;
                        this_1.visibleColumns.forEach(function (item) {
                            if (col.prop === item) {
                                col['visible'] = false;
                            }
                        });
                        this_1.allColumns.push(col);
                    };
                    var this_1 = this;
                    try {
                        for (var _b = __values(this.datatable.bodyComponent.columns), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var col = _c.value;
                            _loop_1(col);
                        }
                    }
                    catch (e_1_1) {
                        e_1 = { error: e_1_1 };
                    }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return))
                                _a.call(_b);
                        }
                        finally {
                            if (e_1)
                                throw e_1.error;
                        }
                    }
                    this.setTableColumn();
                    if (this.cacheData === true) {
                        this.loadCacheData();
                    }
                }
            };
        /**
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.ngAfterViewChecked = /**
         * @return {?}
         */
            function () {
                if (this.datatable && this.datatable['ngx-datatable-actions']) {
                    this.allColumns = this.datatable['ngx-datatable-actions'];
                }
            };
        /**
         * @param {?} column
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.toggleVisible = /**
         * @param {?} column
         * @return {?}
         */
            function (column) {
                column['visible'] = !column['visible'];
                this.setTableColumn();
            };
        /**
         * @param {?} column
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.pinningVisible = /**
         * @param {?} column
         * @return {?}
         */
            function (column) {
                column['fixed'] = !column['fixed'];
                this.allColumns[this.allColumns.indexOf(column)].frozenLeft = column['fixed'];
                this.setTableColumn();
            };
        /**
         * @private
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.setTableColumn = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var columns = this.allColumns.filter(function (c) {
                    return c['visible'];
                });
                this.datatable.columns = columns;
                this.datatable['ngx-datatable-actions'] = this.allColumns;
                if (this.cacheData === true) {
                    this.cacheColumn();
                }
            };
        /**
         * @private
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.loadCacheData = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var vcns = [];
                /** @type {?} */
                var fcns = [];
                /** @type {?} */
                var cache = sessionStorage.getItem(this.router.url + '|dt');
                if (cache != null) {
                    /** @type {?} */
                    var colns = JSON.parse(cache);
                    vcns = colns[0].split(',');
                    fcns = colns[1].split(',');
                    this.allColumns.forEach(function (c) {
                        if (vcns.length > 0 && c.name && vcns.indexOf(c.name) === -1) {
                            c['visible'] = false;
                        }
                        if (fcns.length > 0 && fcns.indexOf(c.name) > -1) {
                            c['fixed'] = true;
                            c.frozenLeft = true;
                        }
                    });
                }
                this.setTableColumn();
            };
        /**
         * @private
         * @return {?}
         */
        NgxDatatableActionsComponent.prototype.cacheColumn = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var vcol = [];
                /** @type {?} */
                var fcol = [];
                /** @type {?} */
                var columns = this.allColumns.filter(function (c) {
                    return (c['visible'] || c['fixed']) && c.name;
                });
                columns.forEach(function (c) {
                    if (c['visible']) {
                        vcol.push(c.name);
                    }
                    if (c['fixed']) {
                        fcol.push(c.name);
                    }
                });
                if (vcol || fcol) {
                    /** @type {?} */
                    var value = JSON.stringify([vcol.join(','), fcol.join(',')]);
                    sessionStorage.setItem(this.router.url + '|dt', value);
                }
                else {
                    sessionStorage.removeItem(this.router.url + '|dt');
                }
            };
        NgxDatatableActionsComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'app-datatable-actions',
                        template: "\n  <div class=\"dropdown d-inline\">\n    <a href=\"#\" class=\"btn m-btn m-btn--hover-brand m-btn--icon m-btn--icon-only m-btn--pill\"\n      data-toggle=\"dropdown\" aria-expanded=\"false\">\n      <i class=\"la la-ellipsis-h\"></i>\n    </a>\n    <div class=\"dropdown-menu dropdown-menu-right\" x-placement=\"bottom-end\">\n      <ng-container *ngFor=\"let col of allColumns\">\n        <div *ngIf=\"col.name && col.name!=null && col.name!=''\" class=\"dropdown-item\">\n          <a class=\"m-link\" title=\"\u53EF\u89C1\" (click)=\"toggleVisible(col)\">\n            <i class=\"la la-check\" [ngClass]=\"{'m--font-focus': col['visible'], 'm--font-metal': !col['visible']}\"></i>\n          </a>\n          <a class=\"m-link\" title=\"\u56FA\u5B9A\" (click)=\"pinningVisible(col)\">\n            <i class=\"la la-thumb-tack\" [ngClass]=\"{'m--font-focus': col['fixed'], 'm--font-metal': !col['fixed']}\"></i>\n          </a>\n          <span class=\"inline\">{{col.name}}</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>"
                    }] }
        ];
        /** @nocollapse */
        NgxDatatableActionsComponent.ctorParameters = function () {
            return [
                { type: router.Router }
            ];
        };
        NgxDatatableActionsComponent.propDecorators = {
            datatable: [{ type: core.Input }],
            visibleColumns: [{ type: core.Input }],
            cacheData: [{ type: core.Input }]
        };
        return NgxDatatableActionsComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxDatatableActionsModule = /** @class */ (function () {
        function NgxDatatableActionsModule() {
        }
        /**
         * @return {?}
         */
        NgxDatatableActionsModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: NgxDatatableActionsModule
                };
            };
        NgxDatatableActionsModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule],
                        declarations: [NgxDatatableActionsComponent],
                        exports: [NgxDatatableActionsComponent]
                    },] }
        ];
        return NgxDatatableActionsModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NgxDatatableActionsComponent = NgxDatatableActionsComponent;
    exports.NgxDatatableActionsModule = NgxDatatableActionsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-datatable-actions.umd.js.map