import { Router } from '@angular/router';
import { Component, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxDatatableActionsComponent {
    /**
     * @param {?} router
     */
    constructor(router) {
        this.router = router;
        this.visibleColumns = [];
        this.cacheData = false;
        this.allColumns = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.datatable && this.datatable['ngx-datatable-actions']) {
            this.allColumns = this.datatable['ngx-datatable-actions'];
        }
        else {
            for (const col of this.datatable.bodyComponent.columns) {
                col['visible'] = true;
                col['fixed'] = false;
                this.visibleColumns.forEach((item) => {
                    if (col.prop === item) {
                        col['visible'] = false;
                    }
                });
                this.allColumns.push(col);
            }
            this.setTableColumn();
            if (this.cacheData === true) {
                this.loadCacheData();
            }
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewChecked() {
        if (this.datatable && this.datatable['ngx-datatable-actions']) {
            this.allColumns = this.datatable['ngx-datatable-actions'];
        }
    }
    /**
     * @param {?} column
     * @return {?}
     */
    toggleVisible(column) {
        column['visible'] = !column['visible'];
        this.setTableColumn();
    }
    /**
     * @param {?} column
     * @return {?}
     */
    pinningVisible(column) {
        column['fixed'] = !column['fixed'];
        this.allColumns[this.allColumns.indexOf(column)].frozenLeft = column['fixed'];
        this.setTableColumn();
    }
    /**
     * @private
     * @return {?}
     */
    setTableColumn() {
        /** @type {?} */
        const columns = this.allColumns.filter(c => {
            return c['visible'];
        });
        this.datatable.columns = columns;
        this.datatable['ngx-datatable-actions'] = this.allColumns;
        if (this.cacheData === true) {
            this.cacheColumn();
        }
    }
    /**
     * @private
     * @return {?}
     */
    loadCacheData() {
        /** @type {?} */
        let vcns = [];
        /** @type {?} */
        let fcns = [];
        /** @type {?} */
        const cache = sessionStorage.getItem(this.router.url + '|dt');
        if (cache != null) {
            /** @type {?} */
            const colns = JSON.parse(cache);
            vcns = colns[0].split(',');
            fcns = colns[1].split(',');
            this.allColumns.forEach(c => {
                if (vcns.length > 0 && c.name && vcns.indexOf(c.name) === -1) {
                    c['visible'] = false;
                }
                if (fcns.length > 0 && fcns.indexOf(c.name) > -1) {
                    c['fixed'] = true;
                    c.frozenLeft = true;
                }
            });
        }
        this.setTableColumn();
    }
    /**
     * @private
     * @return {?}
     */
    cacheColumn() {
        /** @type {?} */
        const vcol = [];
        /** @type {?} */
        const fcol = [];
        /** @type {?} */
        const columns = this.allColumns.filter(c => {
            return (c['visible'] || c['fixed']) && c.name;
        });
        columns.forEach(c => {
            if (c['visible']) {
                vcol.push(c.name);
            }
            if (c['fixed']) {
                fcol.push(c.name);
            }
        });
        if (vcol || fcol) {
            /** @type {?} */
            const value = JSON.stringify([vcol.join(','), fcol.join(',')]);
            sessionStorage.setItem(this.router.url + '|dt', value);
        }
        else {
            sessionStorage.removeItem(this.router.url + '|dt');
        }
    }
}
NgxDatatableActionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-datatable-actions',
                template: `
  <div class="dropdown d-inline">
    <a href="#" class="btn m-btn m-btn--hover-brand m-btn--icon m-btn--icon-only m-btn--pill"
      data-toggle="dropdown" aria-expanded="false">
      <i class="la la-ellipsis-h"></i>
    </a>
    <div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end">
      <ng-container *ngFor="let col of allColumns">
        <div *ngIf="col.name && col.name!=null && col.name!=''" class="dropdown-item">
          <a class="m-link" title="可见" (click)="toggleVisible(col)">
            <i class="la la-check" [ngClass]="{'m--font-focus': col['visible'], 'm--font-metal': !col['visible']}"></i>
          </a>
          <a class="m-link" title="固定" (click)="pinningVisible(col)">
            <i class="la la-thumb-tack" [ngClass]="{'m--font-focus': col['fixed'], 'm--font-metal': !col['fixed']}"></i>
          </a>
          <span class="inline">{{col.name}}</span>
        </div>
      </ng-container>
    </div>
  </div>`
            }] }
];
/** @nocollapse */
NgxDatatableActionsComponent.ctorParameters = () => [
    { type: Router }
];
NgxDatatableActionsComponent.propDecorators = {
    datatable: [{ type: Input }],
    visibleColumns: [{ type: Input }],
    cacheData: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxDatatableActionsModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: NgxDatatableActionsModule
        };
    }
}
NgxDatatableActionsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [NgxDatatableActionsComponent],
                exports: [NgxDatatableActionsComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxDatatableActionsComponent, NgxDatatableActionsModule };

//# sourceMappingURL=ngx-datatable-actions.js.map